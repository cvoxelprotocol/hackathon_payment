/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SelfDestruct, SelfDestructInterface } from "../SelfDestruct";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_dest",
        type: "address",
      },
    ],
    name: "forceEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011a806100206000396000f3fe608060405260043610601f5760003560e01c8063baec8d8014602a576025565b36602557005b600080fd5b348015603557600080fd5b50604c600480360381019060489190607a565b604e565b005b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60008135905060748160d0565b92915050565b600060208284031215608b57600080fd5b60006097848285016067565b91505092915050565b600060a98260b0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60d78160a0565b811460e157600080fd5b5056fea264697066735822122039b6e392a749885528ce7a7190c8b3421c671360afb28ff74e8a48fefe81360e64736f6c63430008040033";

export class SelfDestruct__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SelfDestruct> {
    return super.deploy(overrides || {}) as Promise<SelfDestruct>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SelfDestruct {
    return super.attach(address) as SelfDestruct;
  }
  connect(signer: Signer): SelfDestruct__factory {
    return super.connect(signer) as SelfDestruct__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SelfDestructInterface {
    return new utils.Interface(_abi) as SelfDestructInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SelfDestruct {
    return new Contract(address, _abi, signerOrProvider) as SelfDestruct;
  }
}
